package com.helldeck.ui.components

import androidx.compose.foundation.layout.*
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp

/**
 * Rules sheet component
 */
@Composable
fun RulesSheet(
    onClose: () -> Unit
) {
    val scrollState = rememberScrollState()
    
    Surface(
        modifier = Modifier.fillMaxSize(),
        color = MaterialTheme.colorScheme.background
    ) {
        Column(
            modifier = Modifier
                .fillMaxSize()
                .verticalScroll(scrollState)
                .padding(24.dp)
        ) {
            // Header
            Row(
                modifier = Modifier.fillMaxWidth(),
                horizontalArrangement = Arrangement.SpaceBetween,
                verticalAlignment = Alignment.CenterVertically
            ) {
                Text(
                    text = "üìñ HELLDECK Rules",
                    style = MaterialTheme.typography.headlineLarge.copy(
                        fontWeight = FontWeight.Bold,
                        fontSize = 28.sp
                    ),
                    color = HelldeckColors.Yellow
                )
                
                TextButton(onClick = onClose) {
                    Text(
                        "‚úï",
                        style = MaterialTheme.typography.titleMedium.copy(fontWeight = FontWeight.Bold)
                    )
                }
            }
            
            Spacer(modifier = Modifier.height(24.dp))
            
            // Game Overview
            Card(
                modifier = Modifier.fillMaxWidth(),
                colors = CardDefaults.cardColors(
                    containerColor = HelldeckColors.DarkGray
                )
            ) {
                Column(
                    modifier = Modifier.padding(20.dp)
                ) {
                    Text(
                        text = "üéÆ Game Overview",
                        style = MaterialTheme.typography.titleLarge.copy(fontWeight = FontWeight.Bold),
                        color = HelldeckColors.Yellow
                    )
                    
                    Spacer(modifier = Modifier.height(12.dp))
                    
                    Text(
                        text = "HELLDECK is a party game where players take turns drawing cards " +
                                "and completing hilarious challenges. The goal is to make everyone laugh " +
                                "while navigating through different game modes and interactions.",
                        style = MaterialTheme.typography.bodyLarge,
                        color = HelldeckColors.White,
                        lineHeight = 1.4.sp
                    )
                }
            }
            
            Spacer(modifier = Modifier.height(16.dp))
            
            // Core Rules
            Card(
                modifier = Modifier.fillMaxWidth(),
                colors = CardDefaults.cardColors(
                    containerColor = HelldeckColors.MediumGray
                )
            ) {
                Column(
                    modifier = Modifier.padding(20.dp)
                ) {
                    Text(
                        text = "üìã Core Rules",
                        style = MaterialTheme.typography.titleLarge.copy(fontWeight = FontWeight.Bold),
                        color = HelldeckColors.Yellow
                    )
                    
                    Spacer(modifier = Modifier.height(12.dp))
                    
                    val rules = listOf(
                        "‚Ä¢ Take turns being the active player",
                        "‚Ä¢ Read cards aloud and follow instructions",
                        "‚Ä¢ Complete challenges honestly and creatively",
                        "‚Ä¢ Vote or judge as required by the game",
                        "‚Ä¢ Award points fairly",
                        "‚Ä¢ Most importantly: have fun and be respectful"
                    )
                    
                    rules.forEach { rule ->
                        Text(
                            text = rule,
                            style = MaterialTheme.typography.bodyLarge,
                            color = HelldeckColors.White,
                            modifier = Modifier.padding(vertical = 4.dp)
                        )
                    }
                }
            }
            
            Spacer(modifier = Modifier.height(16.dp))
            
            // Game Modes
            Card(
                modifier = Modifier.fillMaxWidth(),
                colors = CardDefaults.cardColors(
                    containerColor = HelldeckColors.DarkGray
                )
            ) {
                Column(
                    modifier = Modifier.padding(20.dp)
                ) {
                    Text(
                        text = "üé≤ Game Modes",
                        style = MaterialTheme.typography.titleLarge.copy(fontWeight = FontWeight.Bold),
                        color = HelldeckColors.Yellow
                    )
                    
                    Spacer(modifier = Modifier.height(12.dp))
                    
                    val gameModes = listOf(
                        "‚Ä¢ **Roast Consensus** - Vote for the best roast target",
                        "‚Ä¢ **Majority Report** - Guess what the majority thinks",
                        "‚Ä¢ **Poison Pitch** - Creative pitch with a twist",
                        "‚Ä¢ **Confession** - Truth or bluff voting game",
                        "‚Ä¢ **Smash or Pass** - Rate the spicy content",
                        "‚Ä¢ **Target Pick** - Select players for challenges"
                    )
                    
                    gameModes.forEach { mode ->
                        Text(
                            text = mode,
                            style = MaterialTheme.typography.bodyLarge,
                            color = HelldeckColors.White,
                            modifier = Modifier.padding(vertical = 4.dp)
                        )
                    }
                }
            }
            
            Spacer(modifier = Modifier.height(16.dp))
            
            // Scoring
            Card(
                modifier = Modifier.fillMaxWidth(),
                colors = CardDefaults.cardColors(
                    containerColor = HelldeckColors.MediumGray
                )
            ) {
                Column(
                    modifier = Modifier.padding(20.dp)
                ) {
                    Text(
                        text = "üèÜ Scoring System",
                        style = MaterialTheme.typography.titleLarge.copy(fontWeight = FontWeight.Bold),
                        color = HelldeckColors.Yellow
                    )
                    
                    Spacer(modifier = Modifier.height(12.dp))
                    
                    Text(
                        text = "‚Ä¢ Win rounds to earn points\n" +
                                "‚Ä¢ Get bonus points for creative answers\n" +
                                "‚Ä¢ Streaks multiply your score\n" +
                                "‚Ä¢ Last place gets to pick next game",
                        style = MaterialTheme.typography.bodyLarge,
                        color = HelldeckColors.White,
                        lineHeight = 1.4.sp
                    )
                }
            }
            
            Spacer(modifier = Modifier.height(16.dp))
            
            // Tips
            Card(
                modifier = Modifier.fillMaxWidth(),
                colors = CardDefaults.cardColors(
                    containerColor = HelldeckColors.DarkGray
                )
            ) {
                Column(
                    modifier = Modifier.padding(20.dp)
                ) {
                    Text(
                        text = "üí° Pro Tips",
                        style = MaterialTheme.typography.titleLarge.copy(fontWeight = FontWeight.Bold),
                        color = HelldeckColors.Yellow
                    )
                    
                    Spacer(modifier = Modifier.height(12.dp))
                    
                    Text(
                        text = "‚Ä¢ Read the room and adapt your style\n" +
                                "‚Ä¢ Don't be afraid to be bold (when appropriate)\n" +
                                "‚Ä¢ Team up with unlikely allies\n" +
                                "‚Ä¢ Remember: chaos creates the best memories\n" +
                                "‚Ä¢ When in doubt, pick the funniest option",
                        style = MaterialTheme.typography.bodyLarge,
                        color = HelldeckColors.White,
                        lineHeight = 1.4.sp
                    )
                }
            }
            
            Spacer(modifier = Modifier.height(24.dp))
            
            // Footer
            Row(
                modifier = Modifier.fillMaxWidth(),
                horizontalArrangement = Arrangement.Center
            ) {
                Text(
                    text = "üî• Bring the heat or go home! üî•",
                    style = MaterialTheme.typography.titleMedium.copy(
                        fontWeight = FontWeight.Bold,
                        color = HelldeckColors.Orange
                    )
                )
            }
        }
    }
}